name: Decision Scoring CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Ambiente para deploy'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest pytest-cov

      - name: Run tests
        run: |
          python -m pytest tests/ --cov=src --cov-report=xml

      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  deploy-staging:
    name: Deploy to Staging
    needs: test
    if: github.ref == 'refs/heads/develop' || github.event.inputs.environment == 'staging'
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Render
        run: |
          curl -X POST "https://api.render.com/deploy/srv-${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}"
      
      - name: Verify deployment
        run: |
          echo "Esperando a implantação ser concluída..."
          sleep 60
          # Aqui você pode adicionar um script para verificar se o serviço está funcionando corretamente

  deploy-production:
    name: Deploy to Production
    needs: [test, deploy-staging]
    if: github.ref == 'refs/heads/main' || github.event.inputs.environment == 'production'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Render
        run: |
          curl -X POST "https://api.render.com/deploy/srv-${{ secrets.RENDER_PROD_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}"
      
      - name: Verify deployment
        run: |
          echo "Esperando a implantação ser concluída..."
          sleep 60
          # Aqui você pode adicionar um script para verificar se o serviço está funcionando corretamente